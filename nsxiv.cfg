# The below configuration file is parsed using the libconfig library.
#
# Refer to the official documentation if you need it. Here is a quick breakdown
# of the syntax used.
#
# A value can be set using an equals sign or a colon, the trailing semicolon is optional
# and whitespace is not significant.
#
#   name = value;
#   name: value;
#
# { settings ... }  - curly braces denote a group of settings, and a group can contain
#                     multiple types of configuration
# [ value, ... ]    - square brackets denote an array, and all values within the array
#                     must be of the same configuration type
# ( value, ... )    - parentheses denote a list, and a list can contain multiple groups,
#                     arrays, scalar values or other lists
# /* */, // and #   - treated as comments
# @included "path"  - include another configuration file - useful if you want to split
#                     the configuration into smaller parts
#
# When it comes to syntax highlighting for these kind of configuration files you may
# try Ruby, awk, cucumber, perl, puppet or R.
#

window:
{
	# Default window dimensions (overwritten via -g option)
	width = 800;
	height = 600;

	# If true, statusbar appears on top of the window
	top_statusbar = false;

	# Colors and font can be specified via X resources. See nsxiv(1), X(7) section
	# Resources and xrdb(1) for more information.
}

image:
{
	# Default slideshow delay (in sec, overwritten via -S option)
	slideshow_delay = 5;

	# The scroll command pans the image 1/pan_fraction of screen width/height
	pan_fraction = 5;

	# Levels (in percent) to use when zooming via - and +, with first and last
	# value being used as the minimum/maximum zoom level.
	zoom_levels = [12.5,  25.0,  50.0,  75.0, 100.0, 150.0, 200.0, 400.0, 800.0];

	# Color correction allows for the gamma, brightness and contrast to be adjusted
	# based on the number of steps.
	#
	# For example with a step count of 32 the gamma can be can be adjusted in the
	# range of -32 to +32, with negative steps giving you finer control around the
	# normal range (0.0-1.0) and positive steps let you go beyond the normal values
	# up to the defined maximum. The step size depends on whether you are below or
	# above the neutral point.
	#
	# That means that for gamma we have that:
	#    User step -32 to 0 will map to the range [0.0 to 1.0]
	#    User step 1 to +32 will map to the range [1.0 to 10.0] (maximum)
	#    Step 0 is the initial state, i.e. no adjustment, while negative values
	#    make things go darker and positive values allow for gamma to be
	#    increased up to 10 times
	#
	# A higher step count will result in higher granularity (i.e. more control).
	#
	color_correction_steps = 32;
	gamma_max = 10.0;
	brightness_max = 2.0;
	contrast_max = 4.0;

	# Percentage of memory to use for imlib2's cache size.
	#   3 means use 3% of total memory which is about 245MiB on 8GiB machine
	#   0 or less means disable cache
	# 100 means use all available memory (but not above the cache size limit).
	#
	# The limit and fallback settings are in MiB.
	#
	# NOTE: higher cache size means better image reloading performance, but also
	# higher memory usage.
	#
	cache_size:
	{
		mem_percentage = 3;  # Use 3% of total memory for cache
		limit = 256;  # but not above 256MiB
		fallback = 32;  # fall back to 32MiB if total memory can't be determined
	}

}

options:
{
	# Enable anti-alias. If false, pixelate images when zoom level is not 100%
	# Toggled with the "a" keybinding and overwritten via --anti-alias option.
	anti_alias = true;

	# If true, use a checkerboard background for alpha layer,
	# Toggled with the Shift+a keybinding and overwritten via --alpha-layer option.
	alpha_layer = false;

	# Text list of default whitelisted directories for thumbnail cache. This can be
	# overridden via the --cache-allow option.
	#
	# The formatting is similar to the PATH environment variable in shell scripting,
	# meaning that it is a colon (:) separated list of paths.
	#
	# If a path starts with an asterisk (*) then this indicates that the path should
	# be matched recursively.
	#
	# Example configuration: "/user/pictures:*/media/pictures"
	#
	# This will will whitelist the "/user/pictures" directory non-recursively and
	# "/media/pictures" recursively. Nothing outside these two directories will be
	# cached.
	#
	thumbnail_whitelisted_directories = "";

	# Text list of default blacklist directories for thumbnail cache. This can be
	# overridden via the --cache-deny option.
	#
	# Example configuration: "*/secret"
	#
	# This will prevent nsxiv from caching anything inside the "/secret" directory
	# and its subdirectories.
	#
	# Note that blacklists and whitelists are mutually exclusive, and nsxiv only
	# supports one or the other. If a blacklist is specified then this will take
	# precedence over the whitelist.
	#
	thumbnail_blacklisted_directories = "";
}

thumbnail:
{
	# Thumbnail sizes in pixels (width == height)
	sizes = [32, 64, 96, 128, 160];

	# The thumbnail size to use at startup
	initial_thumbnail_size = 96;
}

# Keyboard mapping for image and thumbnail mode.
#
#   modifier   Super, Shift, Alt, Ctrl, AltGr, ShiftGr - can be combined (defaults to no modifier)
#   key        keysym name without the XK_ prefix, e.g. "bracketright", look these up using xev
#   function   the function to call when the key combination is pressed
#   argument   the argument to pass to the function (integer or named command)
#
# Globally accessible functions:
#   change_gamma       toggle_bar         mark_range       n_or_last     remove_image
#   change_brightness  toggle_invert      navigate_marked  quit          switch_mode
#   change_contrast    toggle_fullscreen  unmark_all       pick_quit     first
#   prefix_external    toggle_image_mark  reverse_marks    reload_image  zoom
#   dmenu_search       scroll_screen
#
# Functions limited to image mode:
#   scroll_image       toggle_alpha       cursor_navigate  fit_to_win    alternate  drag
#   scroll_to_center   toggle_animation   navigate         flip          set_zoom
#   scroll_to_edge     toggle_antialias   navigate_frame   rotate        slideshow
#
# Functions limited to thumbnail mode:
#   scroll_thumbnails  drag_mark_image    reload_all       move_sel      select
#
# Argument options:
#    Directions: LEFT, RIGHT, UP, DOWN, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, BOTTOM_RIGHT
#    Degrees: DEGREE_90, DEGREE_180, DEGREE_270
#    Flip directions: FLIP_HORIZONTAL, FLIP_VERTICAL
#    Scaling options: SCALE_DOWN, SCALE_FIT, SCALE_FILL, SCALE_WIDTH, SCALE_HEIGHT, SCALE_ZOOM
#    Drag modes: DRAG_RELATIVE, DRAG_ABSOLUTE
#    Misc: None
#
keybindings = (
	# Global keybindings
	{ modifier = "", key = "q", function = "quit" },
	{ modifier = "Shift", key = "q", function = "pick_quit" },
	{ modifier = "", key = "Return", function = "switch_mode" },
	{ modifier = "", key = "f", function = "toggle_fullscreen" },
	{ modifier = "", key = "i", function = "toggle_invert" },
	{ modifier = "", key = "b", function = "toggle_bar" },
	{ modifier = "", key = "/", function = "dmenu_search" },
	{ modifier = "Ctrl", key = "x", function = "prefix_external" },
	{ modifier = "", key = "g", function = "first" },
	{ modifier = "Shift", key = "g", function = "n_or_last" },
	{ modifier = "", key = "r", function = "reload_image" },
	{ modifier = "Shift", key = "d", function = "remove_image" },
	{ modifier = "Ctrl", key = ["h", "j", "k", "l"], function = "scroll_screen", argument = ["left", "down", "up", "right"] },
	{ modifier = "Ctrl", key = ["Left", "Down", "Up", "Right"], function = "scroll_screen", argument = ["left", "down", "up", "right"] },
	{ modifier = "", key = ["plus", "minus"], function = "zoom", argument = [+1, -1] },
	{ modifier = "", key = ["KP_Add", "KP_Subtract"], function = "zoom", argument = [+1, -1] },
	{ modifier = "", key = "m", function = "toggle_image_mark" },
	{ modifier = "Shift", key = "m", function = "mark_range" },
	{ modifier = "Ctrl", key = "m", function = "reverse_marks" },
	{ modifier = "Ctrl", key = "u", function = "unmark_all" },
	{ modifier = "Shift", key = ["n", "p"], function = "navigate_marked", argument = [+1, -1] },
	{ modifier = "", key = ["braceleft", "braceright"], function = "change_gamma", argument = [-1, +1]},
	{ modifier = "Ctrl", key = "g" function = "change_gamma", argument = 0 },
	{ modifier = "Ctrl", key = ["bracketleft", "bracketright"], function = "change_brightness", argument = [-1, +1]},
	{ modifier = "", key = ["parenleft", "parenright"], function = "change_contrast", argument = [-1, +1]},
	# Thumbnail mode keybindings
	{ modifier = "", key = ["h", "j", "k", "l"], function = "move_sel", argument = ["left", "down", "up", "right"] },
	{ modifier = "", key = ["Left", "Down", "Up", "Right"], function = "move_sel", argument = ["left", "down", "up", "right"] },
	{ modifier = "Shift", key = "r", function = "reload_all" },
	# Image mode keybindings
	{ modifier = "", key = ["n", "p"], function = "navigate", argument = [+1, -1] },
	{ modifier = "", key = ["n", "p"], function = "scroll_to_edge", argument = "top_left" },
	{ modifier = "", key = ["space", "BackSpace"], function = "navigate", argument = [+1, -1] },
	{ modifier = "", key = ["bracketleft", "bracketright"], function = "navigate", argument = [-10, +10] },
	{ modifier = "Ctrl", key = "6", function = "alternate" },
	{ modifier = "Ctrl", key = ["n", "p"], function = "navigate_frame", argument = [+1, -1] },
	{ modifier = "Ctrl", key = ["space", "a"], function = "toggle_animation" },
	{ modifier = "", key = ["h", "j", "k", "l"], function = "scroll_image", argument = ["left", "down", "up", "right"] },
	{ modifier = "", key = ["Left", "Down", "Up", "Right"], function = "scroll_image", argument = ["left", "down", "up", "right"] },
	{ modifier = "Shift", key = ["h", "j", "k", "l"], function = "scroll_to_edge", argument = ["left", "down", "up", "right"] },
	{ modifier = "", key = "z", function = "scroll_to_center" },
	{ modifier = "", key = "equal", function = "set_zoom", argument = 100 },
	{ modifier = "", key = ["w", "W", "F", "e", "E"], function = "fit_to_win", argument = ["scale_down", "scale_fit", "scale_fill", "scale_width", "scale_height"] },
	{ modifier = "", key = ["less", "greater", "question"], function = "rotate", argument = ["degree_270", "degree_90", "degree_180"] },
	{ modifier = "", key = ["bar", "underscore"], function = "flip", argument = ["flip_horizontal", "flip_vertical"] },
	{ modifier = "", key = "a", function = "toggle_antialias" },
	{ modifier = "Shift", key = "a", function = "toggle_alpha" },
	{ modifier = "", key = "s", function = "slideshow" },
)

# Button mappings for image mode.
image_button_bindings = (
	{ modifier = "", button = 1, function = "cursor_navigate" },
	{ modifier = "Ctrl", button = 1, function = "drag", argument = "drag_relative" },
	{ modifier = "", button = 2, function = "drag", argument = "drag_absolute" },
	{ modifier = "", button = 3, function = "switch_mode" },
	{ modifier = "", button = [4, 5], function = "zoom", argument = [+1, -1] },
)

# Button mappings for thumbnail mode.
thumbnail_button_bindings = (
	{ modifier = "", button = 1, function = "select" },
	{ modifier = "", button = 3, function = "drag_mark_image" },
	{ modifier = "", button = [4, 5], function = "scroll_thumbnails", argument = ["up", "down"] },
	{ modifier = "Ctrl", button = [4, 5], function = "scroll_screen", argument = ["up", "down"] },
)

main:
{
	# Key to use to abort the keyhandler
	keyhandler_abort_key = "Escape";

	# The width of the navigation area. In image mode when the mouse cursor is moved to the
	# left or right side of the image the mouse cursor changes to indicate that you can
	# navigate to the next image. This setting controls how close to the edge the mouse
	# cursor must be for navigation to be available. Anything above 50% means that the
	# navigation is always available.
	#
	# The value can either be relative to the window size by including a percentage sign at
	# the end, or an absolute size can be specified by using a plain number (e.g. 33 pixels).
	# Optionally "33px" can also be used to make the distinction clearer.
	navigation_area_width = "33%";
}
